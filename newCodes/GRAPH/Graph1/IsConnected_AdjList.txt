#include <iostream>
#include<bits/stdc++.h>
using namespace std;

void DFS(unordered_map<int,vector<int>*> edges,int sv,int V,bool* visited)
{
    visited[sv] = true;
    //vector<int>* AdjList = edges[sv];
	for(auto i : *edges[sv])
    {
        if(!visited[i])
            DFS(edges,i,V,visited);
    }
}

int main() {
    int V, E;
    cin >> V >> E;

  /*

  	   Write Your Code Here
	   Complete the Rest of the Program
	   You have to take input and print the output yourself
	 
  */
    unordered_map<int,vector<int>*> edges;
    for(int i=0;i<V;i++)
    {
        vector<int> *temp = new vector<int>;
        edges[i] = temp;
    }
    
    for(int i=0;i<E;i++)
    {
        int a,b;
        cin>>a>>b;
        edges[a]->push_back(b);
        edges[b]->push_back(a);
    }
    bool* visited = new bool[V]();
    
    DFS(edges,0,V,visited);
    
    bool flag = false;
    for(int i=0;i<V;i++)
    {
        if(!visited[i])
        {
            flag = true;
            break;
        }
    }
    if(!flag)
    {
        cout<<"true";
    }
    else
    {
        cout<<"false";
    }

  return 0;
}
