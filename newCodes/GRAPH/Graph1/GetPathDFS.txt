#include <iostream>
#include<vector>
using namespace std;
//ADJ List will do this in O(n)

vector<int> DFSUtil(int edges[][1000], int sp,int v2,int v,bool visited[])
{
    if(sp==v2)
    {
        return {sp};
    }
    
    for(int i=0;i<v;i++)
    {
        if(edges[sp][i]&&!visited[i])
        {
            visited[i] = true;
            auto smallans = DFSUtil(edges,i,v2,v,visited);
            if(smallans.size())
            {
                smallans.push_back(sp);
                return smallans;
            }
        }
    }
    return {};
}

int main()
{
  int V, E, tempX, tempY;
  cin >> V >>E;
    int edges[V][1000] = {};
    for(int i=0;i<E;i++)
    {
        int f,s;
        cin>>f>>s;
        edges[f][s] = 1,edges[s][f] =1;
    }
    int v1,v2;
    cin>>v1>>v2;
    bool visited[V];
    //INITILIZE
    for(int i=0;i<V;i++)
    {
        visited[i] = false;
    }
    //IMPORTANT THAT U MARK IT VISITED
    visited[v1] = true;
    vector<int> ans = DFSUtil(edges,v1,v2, V,visited);
	for(auto i : ans)
    {
        cout<<i<<" ";
    }
  return 0;
}
