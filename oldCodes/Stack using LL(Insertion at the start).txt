class Stack {
    Node *head;
    int size;		// number of elements prsent in stack
    
    public :
    
    Stack() {
        head = NULL;
        size = 0;
    }
    
    int getSize() {
        return size ;
    }
    
    bool isEmpty() {
        return head == NULL;
    }
    
    void push(int element) {
         Node * n = new Node(element);
       
            n->next = head;
            head = n;
        
        size++;
    }
    
    int pop() {
        // Return 0 if stack is empty. Don't display any other message
        if(isEmpty())
        {
            return 0;
        }
        int k = head->data;
        size--;
        Node* temp = head;
        head = head->next;
        delete temp;
        return k;
    }
    
    int top() {
        // Return 0 if stack is empty. Don't display any other message
        if(isEmpty())
        {
            return 0;
        }
        return head->data;
    }
};
